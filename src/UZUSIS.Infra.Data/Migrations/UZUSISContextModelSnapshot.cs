// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UZUSIS.Infra.Data.Context;

#nullable disable

namespace UZUSIS.Infra.Data.Migrations
{
    [DbContext(typeof(UZUSISContext))]
    partial class UZUSISContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("UZUSIS.Domain.Entities.Atributo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValue(new DateTime(2024, 4, 25, 9, 20, 33, 67, DateTimeKind.Local).AddTicks(3665));

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasDefaultValue(new DateTime(2024, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Atributo");
                });

            modelBuilder.Entity("UZUSIS.Domain.Entities.AtributoOption", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("AtributoId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValue(new DateTime(2024, 4, 25, 9, 20, 33, 67, DateTimeKind.Local).AddTicks(6370));

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasDefaultValue(new DateTime(2024, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<string>("OptionName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AtributoId");

                    b.ToTable("AtributoOption");
                });

            modelBuilder.Entity("UZUSIS.Domain.Entities.Carrinho", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValue(new DateTime(2024, 4, 25, 9, 20, 33, 67, DateTimeKind.Local).AddTicks(8824));

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasDefaultValue(new DateTime(2024, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<decimal>("valorTotal")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Carrinhos");
                });

            modelBuilder.Entity("UZUSIS.Domain.Entities.CarrinhoProduto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("CarrinhoId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValue(new DateTime(2024, 4, 25, 9, 20, 33, 70, DateTimeKind.Local).AddTicks(5303));

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasDefaultValue(new DateTime(2024, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<long>("ProdutoId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CarrinhoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("CarrinhoProduto");
                });

            modelBuilder.Entity("UZUSIS.Domain.Entities.Favorito", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValue(new DateTime(2024, 4, 25, 9, 20, 33, 72, DateTimeKind.Local).AddTicks(7827));

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasDefaultValue(new DateTime(2024, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Favorito");
                });

            modelBuilder.Entity("UZUSIS.Domain.Entities.Feedback", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValue(new DateTime(2024, 4, 25, 9, 20, 33, 76, DateTimeKind.Local).AddTicks(52));

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasDefaultValue(new DateTime(2024, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("ProdutoId")
                        .HasColumnType("bigint");

                    b.Property<short>("Stars")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("Feedback");
                });

            modelBuilder.Entity("UZUSIS.Domain.Entities.HistoricoPagamento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValue(new DateTime(2024, 4, 25, 9, 20, 33, 77, DateTimeKind.Local).AddTicks(2799));

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasDefaultValue(new DateTime(2024, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.HasKey("Id");

                    b.ToTable("HistoricoPagamento");
                });

            modelBuilder.Entity("UZUSIS.Domain.Entities.Pagamento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValue(new DateTime(2024, 4, 25, 9, 20, 33, 77, DateTimeKind.Local).AddTicks(4775));

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasDefaultValue(new DateTime(2024, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<DateTime>("DataDePagamento")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataEmissao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("HistoricoPagamentoId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("HistoricoPagamentoId");

                    b.ToTable("Pagamento");
                });

            modelBuilder.Entity("UZUSIS.Domain.Entities.Produto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("CarrinhoId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValue(new DateTime(2024, 4, 25, 9, 20, 33, 77, DateTimeKind.Local).AddTicks(6663));

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasDefaultValue(new DateTime(2024, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long?>("FavoritoId")
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long?>("PagamentoId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(65,30)");

                    b.Property<long>("SeletorId")
                        .HasColumnType("bigint");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("isDisponivel")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("isEsgotado")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("CarrinhoId");

                    b.HasIndex("FavoritoId");

                    b.HasIndex("PagamentoId");

                    b.HasIndex("SeletorId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("UZUSIS.Domain.Entities.Seletor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValue(new DateTime(2024, 4, 25, 9, 20, 33, 77, DateTimeKind.Local).AddTicks(8480));

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasDefaultValue(new DateTime(2024, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Seletor");
                });

            modelBuilder.Entity("UZUSIS.Domain.Entities.SeletorOption", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("AtributoId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValue(new DateTime(2024, 4, 25, 9, 20, 33, 78, DateTimeKind.Local).AddTicks(502));

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasDefaultValue(new DateTime(2024, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<byte[]>("Foto")
                        .HasColumnType("longblob");

                    b.Property<long?>("SeletorId")
                        .HasColumnType("bigint");

                    b.Property<string>("SeletorName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AtributoId");

                    b.HasIndex("SeletorId");

                    b.ToTable("SeletorOption");
                });

            modelBuilder.Entity("UZUSIS.Domain.Entities.Usuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValue(new DateTime(2024, 4, 25, 9, 20, 33, 78, DateTimeKind.Local).AddTicks(2202));

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasDefaultValue(new DateTime(2024, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("UZUSIS.Domain.Entities.AtributoOption", b =>
                {
                    b.HasOne("UZUSIS.Domain.Entities.Atributo", null)
                        .WithMany("AtributoOptions")
                        .HasForeignKey("AtributoId");
                });

            modelBuilder.Entity("UZUSIS.Domain.Entities.Carrinho", b =>
                {
                    b.HasOne("UZUSIS.Domain.Entities.Usuario", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("UZUSIS.Domain.Entities.CarrinhoProduto", b =>
                {
                    b.HasOne("UZUSIS.Domain.Entities.Carrinho", "Carrinho")
                        .WithMany()
                        .HasForeignKey("CarrinhoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UZUSIS.Domain.Entities.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrinho");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("UZUSIS.Domain.Entities.Favorito", b =>
                {
                    b.HasOne("UZUSIS.Domain.Entities.Usuario", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("UZUSIS.Domain.Entities.Feedback", b =>
                {
                    b.HasOne("UZUSIS.Domain.Entities.Usuario", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UZUSIS.Domain.Entities.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("UZUSIS.Domain.Entities.Pagamento", b =>
                {
                    b.HasOne("UZUSIS.Domain.Entities.HistoricoPagamento", null)
                        .WithMany("Pagamentos")
                        .HasForeignKey("HistoricoPagamentoId");
                });

            modelBuilder.Entity("UZUSIS.Domain.Entities.Produto", b =>
                {
                    b.HasOne("UZUSIS.Domain.Entities.Carrinho", null)
                        .WithMany("Produtos")
                        .HasForeignKey("CarrinhoId");

                    b.HasOne("UZUSIS.Domain.Entities.Favorito", null)
                        .WithMany("Produtos")
                        .HasForeignKey("FavoritoId");

                    b.HasOne("UZUSIS.Domain.Entities.Pagamento", null)
                        .WithMany("Produtos")
                        .HasForeignKey("PagamentoId");

                    b.HasOne("UZUSIS.Domain.Entities.Seletor", "Seletor")
                        .WithMany()
                        .HasForeignKey("SeletorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Seletor");
                });

            modelBuilder.Entity("UZUSIS.Domain.Entities.SeletorOption", b =>
                {
                    b.HasOne("UZUSIS.Domain.Entities.Atributo", "Atributo")
                        .WithMany()
                        .HasForeignKey("AtributoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UZUSIS.Domain.Entities.Seletor", null)
                        .WithMany("SeletorOptions")
                        .HasForeignKey("SeletorId");

                    b.Navigation("Atributo");
                });

            modelBuilder.Entity("UZUSIS.Domain.Entities.Atributo", b =>
                {
                    b.Navigation("AtributoOptions");
                });

            modelBuilder.Entity("UZUSIS.Domain.Entities.Carrinho", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("UZUSIS.Domain.Entities.Favorito", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("UZUSIS.Domain.Entities.HistoricoPagamento", b =>
                {
                    b.Navigation("Pagamentos");
                });

            modelBuilder.Entity("UZUSIS.Domain.Entities.Pagamento", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("UZUSIS.Domain.Entities.Seletor", b =>
                {
                    b.Navigation("SeletorOptions");
                });
#pragma warning restore 612, 618
        }
    }
}
